// <auto-generated />
using JeweleryShop.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JeweleryShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JeweleryShop.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Gold"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Platinum"
                        });
                });

            modelBuilder.Entity("JeweleryShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StonesId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialsId");

                    b.HasIndex("StonesId");

                    b.HasIndex("TypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Fine Craftsmansship",
                            ImageURl = "<URL GOES HERE>",
                            MaterialsId = 1,
                            Name = "Golden Neklace",
                            Price = 350m,
                            Size = "300x300",
                            StonesId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fine Craftsmansship",
                            ImageURl = "<URL GOES HERE>",
                            MaterialsId = 1,
                            Name = "Golden Ring",
                            Price = 100m,
                            Size = "300x300",
                            StonesId = 1,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fine Craftsmansship",
                            ImageURl = "<URL GOES HERE>",
                            MaterialsId = 2,
                            Name = "Platinum Ring with Diamond",
                            Price = 100m,
                            Size = "300x300",
                            StonesId = 2,
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("JeweleryShop.Models.Stone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "None"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Diamond"
                        });
                });

            modelBuilder.Entity("JeweleryShop.Models.WearingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WearingTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Neklace"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Ring"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Earrings"
                        });
                });

            modelBuilder.Entity("JeweleryShop.Models.Product", b =>
                {
                    b.HasOne("JeweleryShop.Models.Material", "Materials")
                        .WithMany()
                        .HasForeignKey("MaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeweleryShop.Models.Stone", "Stones")
                        .WithMany()
                        .HasForeignKey("StonesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeweleryShop.Models.WearingType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materials");

                    b.Navigation("Stones");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
